#!/bin/sh /etc/rc.common
START=24
STOP=90

USE_PROCD=1
PROCD_DEBUG=1
PROG=/opt/intel/bin/sys_eth

CONF_FILE=/tmp/sys_eth.conf

DEBUG_LEVEL=4
DEBUG_TYPE=1

mac_clone_status="none"

ethernet_port_config() {
	local section=$1
	local enable
	local speed
	local duplex portid
	config_get portid $section portid
	config_get enable $section enable
	config_get speed $section speed
	config_get duplex $section duplex
	echo "$section $portid:$enable:$speed:$duplex" >> $CONF_FILE
}

macclone_config() {
	config_get mac_clone_status macclone enable
}
port_trunking_config() {
	local section=$1
	local enable
	local mode
	local vlan
	config_get enable $section enable
	config_get mode $section mode
	config_get vlan $section vlan
	echo "porttrunking_status ${enable}" >> $CONF_FILE
	echo "porttrunking_mode ${mode}" >> $CONF_FILE
	echo "porttrunking_vlan ${vlan}" >> $CONF_FILE
}

lag_config() {
	local section=$1
	local enable
	local portid 
	local aggrportid
	local mode
	local bondmode
	config_get enable $section enable
	config_get port $section port
	config_get aggrport $section aggrport
	config_get mode $section mode
	config_get bondmode $section bondmode
	echo "lag_status ${enable}" >> $CONF_FILE
	echo "lag_port ${port}" >> $CONF_FILE
	echo "lag_aggrport ${aggrport}" >> $CONF_FILE
	echo "lag_mode ${mode}" >> $CONF_FILE
	echo "lag_bondmode ${bondmode}" >> $CONF_FILE
}
start_service() {

	> $CONF_FILE
	echo "#portID:enable:bitrate:duplex" > $CONF_FILE
	echo "#Valid bitrates: 10 100 1000, 0 for auto neg" >> $CONF_FILE
	echo "#Valid duplex: Full Half Auto" >> $CONF_FILE

	config_load ethernet
	config_foreach ethernet_port_config port
	config_foreach macclone_config mac
	echo "macclone $mac_clone_status" >> $CONF_FILE
	
	echo "#LAG configuration" >> $CONF_FILE
	config_foreach lag_config lag

	echo "#Port-trunking configuration" >> $CONF_FILE
	config_foreach port_trunking_config trunk

	config_get DEBUG_LEVEL debug level
	config_get DEBUG_TYPE debug type

	procd_open_instance
	procd_set_param env PATH=${PATH}:/opt/intel/sbin:/opt/intel/usr/sbin:/opt/intel/bin LD_LIBRARY_PATH=/opt/intel/lib:/opt/intel/usr/lib:${LD_LIBRARY_PATH}
	procd_set_param command $PROG -c $CONF_FILE -l $DEBUG_LEVEL -t $DEBUG_TYPE
	procd_set_param stdout 1
	procd_set_param stderr 1
	[ -f /usr/share/pseudofs_acl/syseth_pseudofs_acl.json ] && {
		procd_set_param pseudofs_acl /usr/share/pseudofs_acl/syseth_pseudofs_acl.json
	}
	[ -f /usr/share/capabilities/syseth_cap.json ]  && {
		procd_set_param user syseth
		procd_set_param capabilities /usr/share/capabilities/syseth_cap.json
	}
	procd_close_instance
}

service_triggers()
{
	procd_add_reload_trigger "ethernet"
}

reload_service()
{
	stop
	start
}
